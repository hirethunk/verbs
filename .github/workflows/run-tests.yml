name: run-tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  sqlite:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu, windows]
        php: [8.3, 8.2, 8.1]
        laravel: [11.*, 10.*]
        stability: [stable, lowest]
        exclude:
          - php: 8.1
            laravel: 11.*
    name: ${{ matrix.os }}/sqlite P${{ matrix.php }}:L${{ matrix.laravel }} (${{ matrix.stability }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, :php-psr
          coverage: none
      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
          composer update --prefer-${{ matrix.stability }} --prefer-dist --no-interaction
      - name: Execute tests
        run: vendor/bin/pest
        env:
          DB_CONNECTION: sqlite

  mysql:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu ]
        php: [ 8.3, 8.2, 8.1 ]
        laravel: [ 11.*, 10.* ]
        stability: [ lowest, stable ]
        exclude:
          - php: 8.1
            laravel: 11.*
    name: ${{ matrix.os }}/mysql P${{ matrix.php }}:L${{ matrix.laravel }} (${{ matrix.stability }})
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: forge
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, :php-psr
          coverage: none
      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
          composer update --prefer-${{ matrix.stability }} --prefer-dist --no-interaction
      - name: Execute tests
        run: vendor/bin/pest
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: forge
          DB_USERNAME: root
          DB_PASSWORD: password

  pgsql:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu ]
        php: [ 8.3, 8.2, 8.1 ]
        laravel: [ 11.*, 10.* ]
        stability: [ lowest, stable ]
        exclude:
          - php: 8.1
            laravel: 11.*
    name: ${{ matrix.os }}/pgsql P${{ matrix.php }}:L${{ matrix.laravel }} (${{ matrix.stability }})
    services:
      postgresql:
        image: postgres:14
        env:
          POSTGRES_DB: forge
          POSTGRES_USER: forge
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, :php-psr
          coverage: none
      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
          composer update --prefer-${{ matrix.stability }} --prefer-dist --no-interaction
      - name: Execute tests
        run: vendor/bin/pest
        env:
          DB_CONNECTION: pgsql
          DB_DATABASE: forge
          DB_USERNAME: forge
          DB_PASSWORD: password
